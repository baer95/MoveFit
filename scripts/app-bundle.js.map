{"version":3,"sources":["app.ts","environment.ts","home.ts","main.ts","user.ts","resources/index.ts","resources/elements/header.ts","/Users/lucas/Desktop/Hackathon/MoveFit/src/app.html","/Users/lucas/Desktop/Hackathon/MoveFit/src/home.html","/Users/lucas/Desktop/Hackathon/MoveFit/src/user.html","/Users/lucas/Desktop/Hackathon/MoveFit/src/resources/elements/header.html"],"names":[],"mappings":";;IAEA;QAIE;YAHA,YAAO,GAAG,SAAS,CAAC;QAKpB,CAAC;QAQD,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAC5C,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAC;aACjD,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAEH,UAAC;IAAD,CAxBA,AAwBC,IAAA;IAxBY,WAAG,MAwBf,CAAA;;;;;IC1BD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICHF;QAAA;QAEA,CAAC;QAAD,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,YAAI,OAEhB,CAAA;;;;;ICGK,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICzBD;QAAA;QAEA,CAAC;QAAD,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,YAAI,OAEhB,CAAA;;;;;ICAD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;;;;;;;;;;ICFD;QAAA;QAMA,CAAC;QAHC,6BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QAJD;YAAC,4BAAQ;;+CAAA;QAKX,aAAC;IAAD,CANA,AAMC,IAAA;IANY,cAAM,SAMlB,CAAA;;;ACRD;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from \"aurelia-router\";\n\nexport class App {\n  message = \"MoveFit\";\n  router: Router;\n\n  constructor(){\n    // this.timeoutLog();\n  }\n\n  // private timeoutLog(){\n  //   setInterval(() => {\n  //     console.log(\"Home is running\");\n  //   }, 1000);\n  // }\n\n  configureRouter(config: RouterConfiguration, router: Router): void {\n    config.title = 'MoveFit';\n    config.map([\n      { route: '', name: 'home', moduleId: 'home'},\n      { route: 'user', name: 'user', moduleId: 'user'}\n    ]);\n\n    this.router = router;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Home {\n\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class User {\n\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class Header {\n  @bindable message;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n",null,null,null,null],"sourceRoot":"../src"}